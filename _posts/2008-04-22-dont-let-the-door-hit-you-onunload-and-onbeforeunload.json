{"disqus":{"path":"/web/dont-let-the-door-hit-you-onunload-and-onbeforeunload/","commentCount":10,"comments":[{"postId":"887461826","parentPostId":null,"date":"2009-06-07T12:05:05Z","author":"Tore B. Krudtaa","avatar":"https://www.gravatar.com/avatar/0da1f043b943c87172fb4dc60f017440?d=mm&s=60","message":"<p>Here is my view on it.</p><p>Let say you have developed a web application for your customer where the customer is using the web app. on a daily basis in their work.<br>And they do not want to loose data or have to retype anything because they forgot to save the page before leaving it.</p><p>They do a lot of entering of new data, changing data in the form etc... before submitting to server.</p><p>Sometimes they actually do forget to save the form/page.</p><p>I have several such web applications for customers where I use the onbeforeunload together with some javascript that test if the form was changed.<br>So if the client try to leave a page that has been changed but not saved, then he will get a warning that gives him the option to stay on the page (then he can save the changes), or to continue leaving the page.</p><p>In my opinion the onbeforeunload is a really nice feature.<br>And it is a pity that opera has nada support for it.</p><p>Implementing your solution might be doable, but in my opinion it is much better to give the client the choice there and then.<br>Using your solution will also cost more for the customer since you will have to write some client and backend code to handle that for each of the forms used.</p><p>Using the onbeforeunload with some javascript to check if the form was changed are supereasy to implement, and only has to be implemented on the client side.</p><p>Why not let the developer choose and pick what he finds best for his application and customer.</p><p>Because of the nada support for onbeforeunload in Opera, in my customers web applications we test which browser and version that client is using when loggin in to the web app. If using Opera then the user is denied access to the site.</p><p>Browsers that have good support for the onbeforeunload event are:<br>IE<br>Firefox<br>Safari<br>Chrome<br>even Netscape, but who uses it<br>(did not test any other browsers)</p>","replies":[]},{"postId":"887461822","parentPostId":null,"date":"2009-06-09T07:18:12Z","author":"Zach Leatherman","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>As with every development decision, you have to weigh the cost of development against the benefit you get.  If you think it's a better cost-benefit to use onbeforeunload, go for it.  I just don't think it's a very <b>usable</b> solution.</p>","replies":[]},{"postId":"887461827","parentPostId":null,"date":"2009-08-12T21:21:04Z","author":"Olivier","avatar":"https://www.gravatar.com/avatar/0f07ab93e74543cbe1909894830504fd?d=mm&s=60","message":"<p>And what about storing the datas on the client with the new dom storage API instead of the server ? Hoping more browsers will implement this feature soon.</p>","replies":[]},{"postId":"887461823","parentPostId":null,"date":"2009-08-14T03:17:23Z","author":"Zach Leatherman","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Olivier, that's a very good idea, if the browser supports it!  Considering that most of the modern ones do, it might be worthwhile to store locally if available, and then just use onbeforeunload if not.  No sense in doing too much work for those old browsers.</p>","replies":[]},{"postId":"887461828","parentPostId":null,"date":"2009-10-27T22:18:16Z","author":"Ramesh","avatar":"https://www.gravatar.com/avatar/5d480a466be99d131a944039b7d60e7d?d=mm&s=60","message":"<p>Hi Zach Leatherman,</p><p>  The code you put inside the onunload event handler would be executed only after the browser unloads the page. In my case, I have an synchronous AJAX request in unload event. when the user clicks the back button I had to remove the user's session using that ajax request. But the result is, the browser first send the request to the back button first (previous page)  and once its gets the response for the request then only it starts executing the ajax method.  I would like to hear your comments on this.</p><p>Thanks,<br>Ramesh</p>","replies":[]},{"postId":"887461829","parentPostId":null,"date":"2009-10-31T22:11:26Z","author":"Zach Leatherman","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Hey Ramesh,<br>What browsers are you seeing this behavior in?  I know the Safari Blog had some good blog posts about cached pages.<br><a href=\"http://webkit.org/blog/427/webkit-page-cache-i-the-basics/\" rel=\"nofollow noopener\" title=\"http://webkit.org/blog/427/webkit-page-cache-i-the-basics/\">http://webkit.org/blog/427/...</a></p><p>In any event, the onunload event should fire before a new page starts loading.  Double check the timing, there could be another issue causing the problems you're seeing.</p><p>Thanks,<br>Zach</p>","replies":[]},{"postId":"887461831","parentPostId":null,"date":"2009-12-14T17:47:08Z","author":"pratap","avatar":"https://www.gravatar.com/avatar/a44848cf9ad56931afac45589061f4ed?d=mm&s=60","message":"<p>I found that onbeforeunload in safari is of no use if the window is opened in any of the frames of framesets in parent page. Safari never triggers the onbeforeunload event at all whereas it does triggers this event when not inside any frame.<br>Any idea?</p>","replies":[]},{"postId":"887461832","parentPostId":null,"date":"2011-08-19T21:44:55Z","author":"Kevin","avatar":"https://www.gravatar.com/avatar/98f9175eea506491704b71745a77a34b?d=mm&s=60","message":"<p>I have found that the ajax code I have placed in onbeforeunload doesn't always fire (onbeforeunload is firing), so housekeeping doesn't always get done on the Server. Has anyone come across this? I assume the network connection may be lost, but since the page is closing, is there any way to access any ajax error information?</p>","replies":[]},{"postId":"2264932966","parentPostId":null,"date":"2015-09-21T05:58:30Z","author":"John Biggs","avatar":"https://www.gravatar.com/avatar/569d80f3deff5b8e829be35b46dd3200?d=mm&s=60","message":"<p>onunload/onbeforeunload events are abused so much by scam/advetisment ridden pages that the majority of end users find it an annoyance - I'm glad Opera ignores these calls</p>","replies":[]},{"postId":"2435749868","parentPostId":null,"date":"2016-01-02T11:06:09Z","author":"lyricsparoles.com","avatar":"https://www.gravatar.com/avatar/340d5fb4280ca99f0ef58c5c1a2a7d4d?d=mm&s=60","message":"<p>In any event, the onunload event should fire before a new page starts loading. Double check the timing, there could be another issue causing the problems you're seeing. Thank you .</p>","replies":[]}]}}