{"disqus":{"path":"/web/onhashchange-without-setinterval/","commentCount":5,"comments":[{"postId":"887461851","parentPostId":null,"date":"2008-08-22T22:51:20Z","author":"Zach Leatherman","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Look for a fix to the \"resize text\" problem later this evening.  I'm going to wait until I'm not on the employer dime to work on that.</p>","replies":[]},{"postId":"887461848","parentPostId":null,"date":"2008-08-28T03:39:59Z","author":"Nathan Hammond","avatar":"https://www.gravatar.com/avatar/914670ac3138eb4dd96c728fa7482d52?d=mm&s=60","message":"<p>Zach,<br>I'm intrigued by this. So simple and elegant that it is kinda scary. I'd love to see continued development down this path to try and work around the limitations as I see them:<br>1. No bookmarking ability. That could get especially tricky in browsers that register events on hash change, like Firefox. Cause and effect get all messed up.<br>2. Safari. *sigh* A-grade browsers. Bah.<br>3. Client-side style sheets. Text size changes. Zoom changes.</p><p>I'm in the process of writing a history manager right now (timer-based, supports IE8's default event), so I'll stay tuned.</p>","replies":[]},{"postId":"887461849","parentPostId":null,"date":"2008-10-08T22:08:36Z","author":"Nathan Hammond","avatar":"https://www.gravatar.com/avatar/914670ac3138eb4dd96c728fa7482d52?d=mm&s=60","message":"<p>Hey Zach, me again. I wanted to point you in the direction of some of the work being done on this topic:<br><a href=\"http://nathanhammond.com/html-5-and-history-management\" rel=\"nofollow noopener\" title=\"http://nathanhammond.com/html-5-and-history-management\">HTML 5 and History Management</a></p><p>Also, I alluded to doing some work myself, that is now up at:<br><a href=\"http://trac.nathanhammond.com/jssm/\" rel=\"nofollow noopener\" title=\"http://trac.nathanhammond.com/jssm/\">JSSM</a></p><p>It is based on the approach taken by RSH, and the two will be merged to be the same library come the respective 1.0 versions to prevent history manager proliferation.</p><p>Also, I noted somewhere you discussed using jQuery's data method to store information. The reason history managers have adopted the form-based approach is because it allows us to restore the session state after leaving the site (relying upon browsers automatically repopulating the form fields). The jQuery data element is garbage collected once the current document element changes and so if you navigate away you lose all associated information.</p>","replies":[]},{"postId":"887461850","parentPostId":null,"date":"2009-07-06T14:23:15Z","author":"James Close","avatar":"https://www.gravatar.com/avatar/5225c9bdf5fed9941118505577759230?d=mm&s=60","message":"<p>Hi Zach<br>I really liked your approach here and have been using it successfully on a site for the past few months. I have noticed that it does not seem to work with IE8 (even in compatibility mode). The IFrame appears to be reset when navigating back through history. Do you have any thoughts on this? Thanks again for your great work on this. JC</p>","replies":[]},{"postId":"887461852","parentPostId":null,"date":"2009-07-09T04:43:08Z","author":"Zach Leatherman","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>This approach shouldn't be needed in IE8, as it has the onhashchange event.  See the article for a link.</p><p>Let me know if you're seeing problems with it!</p><p>Thanks for the kind words,<br>Zach</p>","replies":[]}]}}