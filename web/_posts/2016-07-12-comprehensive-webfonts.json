{"disqus":{"path":"/web/comprehensive-webfonts/","commentCount":52,"comments":[{"postId":"2781786449","parentPostId":null,"date":"2016-07-13T23:15:30Z","author":"Shaun O'Connell","avatar":"https://www.gravatar.com/avatar/0e5c74395b7706bc7b33a7d2aec1fe57?d=mm&s=60","message":"<p>Hey Zach,</p><p>Have you done any research into ServiceWorkers for font-loading? Also how does HTTP2 affect font-loading?</p><p>It always feels weird to me to be reliant on JavaScript to fix what is a CSS-driven problem. i.e. go to step 3 (parse JS, execute) to fix a problem at step 2 (parse CSS, paint). Is it worth mentioning (or factoring in) that being reliant on JS is a CON for the strategies that use JS?</p><p>Thanks for the insightful article!</p>","replies":[{"postId":"2782868260","parentPostId":"2781786449","date":"2016-07-14T14:15:14Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Youâ€™re really tee-ing up some great future article ideas here :)</p><p>ServiceWorkers could improve the repeat-view optimization, I think, but wouldnâ€™t do much for first-load would it? Iâ€™m not sure yet, I will play around with it!</p><p>I totally agree about your second point. Unfortunately all the workable, usable methods today rely on JS. The article will likely change a lot when `font-display` support increases, and rather than put it in every other method I put a few notes on that in the `font-display` method.</p><p>Thanks for your comment!</p>","replies":[]},{"postId":"2919110996","parentPostId":"2781786449","date":"2016-09-26T14:30:33Z","author":"Jonathan Bidston","avatar":"https://www.gravatar.com/avatar/7965859d468deebec4f236ee48e7e8e9?d=mm&s=60","message":"<p>Regarding HTTP2, I've been having a look at getting the initial HTML as small as possible so that I can use Push to send a highly compressed font file along with it (filling the idle network time).</p><p>Ideally, I'd then cache the font file and set a cookie to prevent further pushes with requests (or something along those lines).</p>","replies":[]}]},{"postId":"2781814253","parentPostId":null,"date":"2016-07-13T23:38:02Z","author":"Alex Bell","avatar":"https://www.gravatar.com/avatar/2f62f94813ad5e83888d6f04fed0cdfd?d=mm&s=60","message":"<p>Nice roundup. Is there any evidence for your statement that \"preload can marginally delay initial render\"? The preload spec says asset load is non-render-blocking. Preload seems like the least blocking solution other than no fonts at all. Also, Opera 38 is currently stable, and shipping CSS `font-display`. I'd like to see them get some credit!</p>","replies":[{"postId":"2782873680","parentPostId":"2781814253","date":"2016-07-14T14:18:34Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>I measured the numbers on my own site and documented it here: <a href=\"https://www.zachleat.com/web/preload/\" rel=\"nofollow noopener\" title=\"https://www.zachleat.com/web/preload/\">https://www.zachleat.com/we...</a> Note those numbers are using Network Throttled to 3G and used on a site that has a large number of inline/critical CSS at the top. Yoav Weiss (implemented preload on Blink) has seen the article, so heâ€™s at least aware of it.</p>","replies":[]},{"postId":"2782876845","parentPostId":"2781814253","date":"2016-07-14T14:20:17Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>The preload browser support bullet says Blink supportâ€”which includes Chrome and Opera! I tried to save some typing ðŸ˜Ž</p>","replies":[{"postId":"2785096854","parentPostId":"2782876845","date":"2016-07-15T16:55:12Z","author":"Alex Bell","avatar":"https://www.gravatar.com/avatar/2f62f94813ad5e83888d6f04fed0cdfd?d=mm&s=60","message":"<p>My point was that your statement about CSS font-display \"At time of writing, this feature is not available in any stable web browsers.\" is inaccurate. Opera 38 is stable, and has the feature. <a href=\"https://developers.google.com/web/updates/2016/02/font-display\" rel=\"nofollow noopener\" title=\"https://developers.google.com/web/updates/2016/02/font-display\">https://developers.google.c...</a></p>","replies":[{"postId":"2785296455","parentPostId":"2785096854","date":"2016-07-15T18:50:46Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Oh, sorry! I thought you were talking about preload. Although I did just test the font-display demo in Opera 38 and I donâ€™t think itâ€™s supported. Can you confirm?</p>","replies":[{"postId":"2800457610","parentPostId":"2785296455","date":"2016-07-24T12:58:42Z","author":"Ramanan V","avatar":"https://www.gravatar.com/avatar/38f535e2e6616511ecce216cc6702a4a?d=mm&s=60","message":"<p>I think it's disabled by default but that's just like Chrome. You can enable it in opera://flags and choosing \"Enable experimental Web Platform features\"</p><p>About your tests, while it's true that multiple preload fonts can slow down, but that's in pages without images. Typical pages will have images and if only one font is preloaded, the page will start downloading images even if the priority for images is slow.</p>","replies":[{"postId":"2800484191","parentPostId":"2800457610","date":"2016-07-24T13:26:40Z","author":"Ramanan V","avatar":"https://www.gravatar.com/avatar/38f535e2e6616511ecce216cc6702a4a?d=mm&s=60","message":"<p>Also agree \"render-blocking\" misleading. Let's say you inline styles (and load the full style asynchronously such as using requestAnimationFrame) and preload ... it doesn't block the render. It just gives a FOIT. But using it together with font-display such as \"swap\" will lead to immediate render, once the browser reads the inline css and some HTML.</p>","replies":[]}]}]}]}]}]},{"postId":"2782968559","parentPostId":null,"date":"2016-07-14T14:59:55Z","author":"James Deering","avatar":"https://www.gravatar.com/avatar/fd50ea038da8ad4a4787b148d8407cff?d=mm&s=60","message":"<p>Open font, remove unneeded glyphs, base64 font, insert in @font-face src: url, you're done. Complexity not needed.</p>","replies":[{"postId":"2783717004","parentPostId":"2782968559","date":"2016-07-14T22:02:18Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>For others, this discussion was continued here: <a href=\"https://twitter.com/zachleat/status/753628706526994432\" rel=\"nofollow noopener\" title=\"https://twitter.com/zachleat/status/753628706526994432\">https://twitter.com/zachlea...</a></p>","replies":[]},{"postId":"2783717218","parentPostId":"2782968559","date":"2016-07-14T22:02:28Z","author":"Shaun O'Connell","avatar":"https://www.gravatar.com/avatar/0e5c74395b7706bc7b33a7d2aec1fe57?d=mm&s=60","message":"<p>I prefer that technique too James, that is, until I saw what a massive impact it had to the Time To First Render, along with some of the side-effects Zach mentions above.<br>Use <a href=\"http://webpagetest.org\" rel=\"nofollow noopener\" title=\"webpagetest.org\">webpagetest.org</a> to test this strategy against a post-load ('ASYNCHRONOUS DATA URI STYLESHEET') strategy and then compare the two. Hopefully it'll be as illuminating for you as it was for me.</p>","replies":[]}]},{"postId":"2784799571","parentPostId":null,"date":"2016-07-15T14:07:37Z","author":"Mit10","avatar":"https://www.gravatar.com/avatar/18d25e1af9317ec7c663499e82e37be4?d=mm&s=60","message":"<p>Not sure what all the acronyms mean :|</p><p>I know flash of unstyled text, but not the rest. I can Google them but figured I'd recommend defining them in such an article.</p>","replies":[]},{"postId":"2788287949","parentPostId":null,"date":"2016-07-17T19:26:42Z","author":"Tom","avatar":"https://www.gravatar.com/avatar/fac93051f8e9ff98bb97c491cfeefa3e?d=mm&s=60","message":"<p>I might've missed a link to an explanation somewhere on the page, but here are what the acronyms stand for:</p><p>- FOUT: Flash of Unstyled Text<br>- FOIT: Flash of Invisible Text</p><p>(from <a href=\"https://css-tricks.com/fout-foit-foft/\" rel=\"nofollow noopener\" title=\"https://css-tricks.com/fout-foit-foft/\">https://css-tricks.com/fout...</a> )</p>","replies":[{"postId":"3467233477","parentPostId":"2788287949","date":"2017-08-14T13:46:51Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Iâ€™ve created a glossary of terms for this page here: <a href=\"https://zachleat.com/web/webfont-glossary/\" rel=\"nofollow noopener\" title=\"https://zachleat.com/web/webfont-glossary/\">https://zachleat.com/web/we...</a></p>","replies":[]}]},{"postId":"2788573252","parentPostId":null,"date":"2016-07-17T22:55:51Z","author":"Serge Zarouski","avatar":"https://www.gravatar.com/avatar/e17824157f5c999dbdd1cb3642a2a27e?d=mm&s=60","message":"<p>Hi Zach, thanks for very detailed article! I run a few tests to compare inline vs async vs foft with data uri and here are results:<br><a href=\"http://www.webpagetest.org/result/160717_J2_16JM/\" rel=\"nofollow noopener\" title=\"http://www.webpagetest.org/result/160717_J2_16JM/\">http://www.webpagetest.org/...</a> - inline<br><a href=\"http://www.webpagetest.org/result/160717_C0_16JJ/\" rel=\"nofollow noopener\" title=\"http://www.webpagetest.org/result/160717_C0_16JJ/\">http://www.webpagetest.org/...</a> - async<br><a href=\"http://www.webpagetest.org/result/160717_1G_16GZ/\" rel=\"nofollow noopener\" title=\"http://www.webpagetest.org/result/160717_1G_16GZ/\">http://www.webpagetest.org/...</a> - foft with data uri</p><p>Obviously async is a leader for both first and repeat views, but there is always FOUT.<br>FOFT is second fastest, but there is following funny effect in case when network is slow: <a href=\"https://cloud.githubusercontent.com/assets/911388/16903224/fc26f2c0-4c45-11e6-83e9-fd885d4fc217.gif\" rel=\"nofollow noopener\" title=\"https://cloud.githubusercontent.com/assets/911388/16903224/fc26f2c0-4c45-11e6-83e9-fd885d4fc217.gif\">https://cloud.githubusercon...</a>. There is also a chance that session storage and cache will get out of sync: <a href=\"https://cloud.githubusercontent.com/assets/911388/16903237/8c7de612-4c46-11e6-8059-a04c8f74e9b0.gif\" rel=\"nofollow noopener\" title=\"https://cloud.githubusercontent.com/assets/911388/16903237/8c7de612-4c46-11e6-8059-a04c8f74e9b0.gif\">https://cloud.githubusercon...</a>. That might happen in case when user is using chrome and choose an option to 'Continue where I left off' (see <a href=\"http://stackoverflow.com/a/20132793)\" rel=\"nofollow noopener\" title=\"http://stackoverflow.com/a/20132793)\">http://stackoverflow.com/a/...</a>, which is a pretty common case, but also cleaned website data - for first view on slow network they'll get both FOIT &amp; FOUT.<br>Inline is slowest, but most reliable in all cases.</p><p>So, I modified your approach to FOFT and combined it with inline font and it seems to be most effective: <a href=\"http://www.webpagetest.org/result/160717_T7_17DZ/\" rel=\"nofollow noopener\" title=\"http://www.webpagetest.org/result/160717_T7_17DZ/\">http://www.webpagetest.org/...</a>, code is here <a href=\"https://fan-giver.hyperdev.space/index4.html\" rel=\"nofollow noopener\" title=\"https://fan-giver.hyperdev.space/index4.html\">https://fan-giver.hyperdev....</a>. I removed sessionStorage to prevent FOIT, and FOUT is still there but is less annoying. The only problem will be with narrow fonts. Also instead of relying on sessionStorage I wonder if we can come up with a solution that uses js to determine width of the element, which will be different based on which font was being used to render it at the given moment. That we can find out if we can apply classname to the body earlier.</p>","replies":[{"postId":"2821592462","parentPostId":"2788573252","date":"2016-08-05T02:48:11Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Hey Serge: thank you for your great comment! Iâ€™m sorry to tell you that unfortunately there was an error on a few of the demos that might render your data inaccurate. It was fixed about 8 days after your comment was posted. So sorry about that</p><p>More info:<br><a href=\"https://twitter.com/xwoody/status/758207860866187264\" rel=\"nofollow noopener\" title=\"https://twitter.com/xwoody/status/758207860866187264\">https://twitter.com/xwoody/...</a><br><a href=\"https://github.com/zachleat/zachleat.com/commit/efe51789ea5dda0a9911eee206075904f088d889\" rel=\"nofollow noopener\" title=\"https://github.com/zachleat/zachleat.com/commit/efe51789ea5dda0a9911eee206075904f088d889\">https://github.com/zachleat...</a></p>","replies":[]}]},{"postId":"2798350295","parentPostId":null,"date":"2016-07-23T00:24:18Z","author":"Ying Zhang","avatar":"https://www.gravatar.com/avatar/fcfd5e14ca9c91790e95dfdb1d2ad756?d=mm&s=60","message":"<p>Have you thought about license issues with subsetting a web font? At least google fonts do not allow subsetting their fonts.</p>","replies":[{"postId":"3055150205","parentPostId":"2798350295","date":"2016-12-16T14:54:41Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>I believe this Google Fonts feature is in Beta: <a href=\"https://developers.google.com/fonts/docs/getting_started#optimizing_your_font_requests_beta\" rel=\"nofollow noopener\" title=\"https://developers.google.com/fonts/docs/getting_started#optimizing_your_font_requests_beta\">https://developers.google.c...</a></p>","replies":[{"postId":"3070938644","parentPostId":"3055150205","date":"2016-12-27T15:16:00Z","author":"ZenMaster","avatar":"https://www.gravatar.com/avatar/2f936f2084a7f044df3228a4bf3cca33?d=mm&s=60","message":"<p>Wouldn't it mean that you need to consume it from Google CDN and not self-host (so - inlining it wouldn't work)?</p>","replies":[{"postId":"3467232791","parentPostId":"3070938644","date":"2017-08-14T13:46:23Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>You can download Google web fonts to self host and inline on your own site.</p>","replies":[]}]}]}]},{"postId":"2806812793","parentPostId":null,"date":"2016-07-27T19:16:06Z","author":"Tracker1","avatar":"https://www.gravatar.com/avatar/b3d0d27c01d183d7770c060f5e29e9ad?d=mm&s=60","message":"<p>One niggle... when you have variants of the same font, don't name them separately, keep the font name the same with the different attributes for the font...</p><p>@font-face {<br>font-family: Lato;<br>src: ...urls for regular<br>font-weight: 400;<br>font-style: normal;<br>}<br>@font-face {<br>font-family: Lato;<br>src: ... urls for bold<br>font-weight: 700;<br>font-style: normal;<br>}</p><p>Then when you specify font-family, juse use Lato, and the closest match will be used... bold will use the bold version, normal weight will use regular... same for italics, etc.</p>","replies":[{"postId":"2808152975","parentPostId":"2806812793","date":"2016-07-28T13:33:53Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>@tracker1:disqus This isnâ€™t a very well known thing, but font loading polyfills do not work well with that style of @font-face block. See <a href=\"https://github.com/zachleat/fontfaceonload/issues/13\" rel=\"nofollow noopener\" title=\"https://github.com/zachleat/fontfaceonload/issues/13\">https://github.com/zachleat...</a></p>","replies":[]}]},{"postId":"2813579493","parentPostId":null,"date":"2016-07-31T17:12:11Z","author":"Peter Y. Chuang","avatar":"https://www.gravatar.com/avatar/95027db6c86012e99b84e4fbf569fe3e?d=mm&s=60","message":"<p>Hi Zach,</p><p>I think I've encountered the same problem as described by Serge Zarouski, in that the use of session storage somehow produces FOUT and FOIT in repeated views. I am able to reproduce that on Google Chrome without throttling down the network speed.</p><p>Interestingly, the session storage method works perfectly on Firefox.</p>","replies":[{"postId":"2821594104","parentPostId":"2813579493","date":"2016-08-05T02:49:42Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>If you have the devtools open, it could be possible that your cache is disabled. So if you do a refresh with cache disabled, the sessionStorage incorrectly expects a primed cache. Itâ€™s unlikely a user will encounter this scenario.</p>","replies":[{"postId":"2839296808","parentPostId":"2821594104","date":"2016-08-15T21:50:41Z","author":"Peter Y. Chuang","avatar":"https://www.gravatar.com/avatar/95027db6c86012e99b84e4fbf569fe3e?d=mm&s=60","message":"<p>I don't think that's the cause of the problem.</p><p>I tested your demo page on webpagetest and captured videos on Firefox and Chrome. I throttled down the internet to 3G to show it more clearly.</p><p>This is the result on Firefox:<br><a href=\"https://www.webpagetest.org/result/160815_5G_WCW/\" rel=\"nofollow noopener\" title=\"https://www.webpagetest.org/result/160815_5G_WCW/\">https://www.webpagetest.org...</a></p><p>And this is on Chrome:<br><a href=\"https://www.webpagetest.org/result/160815_02_WCN/\" rel=\"nofollow noopener\" title=\"https://www.webpagetest.org/result/160815_02_WCN/\">https://www.webpagetest.org...</a></p><p>Both Firefox and Chrome didn't download the font files on repeated viewing, as shown on the waterfall charts, so those files are presumably cached.</p><p>The video of the repeated viewing on Firefox shows no change in fonts, but the video on Chrome shows a very quick change at about 1.5-1.6s mark.</p><p>In my test on my own website, it appears that Chrome briefly shows the fallback font on the repeated viewing before switching to the correct font. In the process of switching, FOIT sometimes occurs.</p>","replies":[]},{"postId":"3268717687","parentPostId":"2821594104","date":"2017-04-22T16:38:08Z","author":"Chris J. ZÃ¤hller","avatar":"https://www.gravatar.com/avatar/618c68b39c9efdd7c1cb1df426a8fa8a?d=mm&s=60","message":"<p>[posted comment on wrong thread]</p>","replies":[]}]}]},{"postId":"2858989234","parentPostId":null,"date":"2016-08-25T14:44:04Z","author":"chhola","avatar":"https://www.gravatar.com/avatar/45771df7e66a639990f0f974124e1d19?d=mm&s=60","message":"<p>I don't understand why FOUT is a good thing now. Haven't we been trying to fix this before by hiding or making the text invisible? But now we are doing the opposite, or am I missing something?</p>","replies":[{"postId":"3130020312","parentPostId":"2858989234","date":"2017-01-31T12:34:47Z","author":"Francis Boudreau","avatar":"https://www.gravatar.com/avatar/af4e0d45f2baa37723cb805d69de65f3?d=mm&s=60","message":"<p>Welcome to the designers vs developers debate!</p>","replies":[]}]},{"postId":"2882332208","parentPostId":null,"date":"2016-09-08T11:20:16Z","author":"Tommy Mathiesen","avatar":"https://www.gravatar.com/avatar/f2bcb120b6ad950fbea933c5d8b950ac?d=mm&s=60","message":"<p>With Chrome and Safari I am experiencing long FOIT in the example where it should only be FOUT: <br><a href=\"https://www.zachleat.com/web-fonts/demos/fout-with-class.html\" rel=\"nofollow noopener\" title=\"https://www.zachleat.com/web-fonts/demos/fout-with-class.html\">https://www.zachleat.com/we...</a></p>","replies":[{"postId":"2882947637","parentPostId":"2882332208","date":"2016-09-08T17:50:34Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Have a look at this comment: <a href=\"https://www.zachleat.com/web/comprehensive-webfonts/#comment-2821594104\" rel=\"nofollow noopener\" title=\"https://www.zachleat.com/web/comprehensive-webfonts/#comment-2821594104\">https://www.zachleat.com/we...</a></p>","replies":[{"postId":"2883122098","parentPostId":"2882947637","date":"2016-09-08T19:28:33Z","author":"Tommy Mathiesen","avatar":"https://www.gravatar.com/avatar/f2bcb120b6ad950fbea933c5d8b950ac?d=mm&s=60","message":"<p>Yes that could have been it, but the FOIT happens with both developer tools on and off - also on my iPhone without any developer mode whatsoever - just a slow 3g connection and then its easy to see.</p>","replies":[{"postId":"2883205322","parentPostId":"2883122098","date":"2016-09-08T20:16:26Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Yeah, itâ€™s independent of whether or not devtools are on/off. Itâ€™s dependent on specific sessionStorage keys, which are cache independent. You can clear them out inside of the devtools.</p>","replies":[]}]}]}]},{"postId":"2934710645","parentPostId":null,"date":"2016-10-05T15:20:49Z","author":"Chris J. ZÃ¤hller","avatar":"https://www.gravatar.com/avatar/618c68b39c9efdd7c1cb1df426a8fa8a?d=mm&s=60","message":"<p>Zach, what's your opinion on CDN vs. locally hosted font files with Critical FOFT with Data URI? I've read it depends on the locations of the server, the CDN, and the client, so let's assume the webserver is in the central US, the CDN is Google Fonts, and the client is somewhere in CONUS.</p><p>Also, does it make sense to inline the non-subsetted @font-face declarations and css if you are serving over HTTP2? I've read that inlining is bad practice over HTTP2.</p>","replies":[{"postId":"3055146533","parentPostId":"2934710645","date":"2016-12-16T14:51:52Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>These are great questionsâ€”I think theyâ€™ll require additional analysis before I could give you a solid opinion. Good candidates for future blog posts!</p>","replies":[{"postId":"3055240833","parentPostId":"3055146533","date":"2016-12-16T15:54:52Z","author":"Chris J. ZÃ¤hller","avatar":"https://www.gravatar.com/avatar/618c68b39c9efdd7c1cb1df426a8fa8a?d=mm&s=60","message":"<p>I look forward to your future thoughts on this.</p>","replies":[]},{"postId":"3268702429","parentPostId":"3055146533","date":"2017-04-22T16:26:27Z","author":"Chris J. ZÃ¤hller","avatar":"https://www.gravatar.com/avatar/618c68b39c9efdd7c1cb1df426a8fa8a?d=mm&s=60","message":"<p>Have you worked this out yet? For now, I'm sticking to your strategy, but it would be good to know if I should be thinking of modifying it.</p><p>BTW, I wrote some PHP to watch my font folder and dynamically update the @font-face declarations in the document head. Still have to update the font observer manually, but in theory that could be automated, as well. Happy to share if you are interested.</p>","replies":[{"postId":"3276931919","parentPostId":"3268702429","date":"2017-04-27T13:06:56Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Not yet!</p><p>and yeah! Feel free to post a link to a repo if itâ€™s sharable!</p>","replies":[]}]}]}]},{"postId":"2967535417","parentPostId":null,"date":"2016-10-25T05:29:22Z","author":"MD Yusuf","avatar":"https://www.gravatar.com/avatar/4c2815588f350aa2b3fdfe478bb143ba?d=mm&s=60","message":"<p>Hi Zach if I do not have any web hosting server, so can I use Roman web fonts?</p>","replies":[{"postId":"3051897535","parentPostId":"2967535417","date":"2016-12-14T15:55:28Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>FOUT with a Class should work pretty easily with Google Web Fonts. TypeKit describes how to do it with their loader too on their documentation.</p>","replies":[]}]},{"postId":"3014657262","parentPostId":null,"date":"2016-11-22T13:43:10Z","author":"Francesco Bedussi","avatar":"https://www.gravatar.com/avatar/15e1e3acce9fa2af3073fec2db48a9e5?d=mm&s=60","message":"<p>Hi Zach,<br>sorry for joining late in the discussion.</p><p>What about a method as simple as declearing a web font and a safe fallback via css:</p><p>body {<br>  font-family: 'Bungee Inline', cursive;<br>}</p><p>and then inject the link to load the webfont via JS at page load/document ready:</p><p>window.addEventListener('load', function(){<br>  var link = document.createElement('link');<br>  link.rel = \"stylesheet\";<br>  link.href=\"<a href=\"https://fonts.googleapis.com/css?family=Bungee+Inline\" rel=\"nofollow noopener\" title=\"https://fonts.googleapis.com/css?family=Bungee+Inline\">https://fonts.googleapis.co...</a>\";<br>  document.head.appendChild(link);<br>})</p><p>isn't it the same as FOUT with a class with much less fuss?</p>","replies":[{"postId":"3015659562","parentPostId":"3014657262","date":"2016-11-22T22:32:32Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>I have a blog post about this approach in the draftsâ€”stay tuned!</p>","replies":[]},{"postId":"3051896231","parentPostId":"3014657262","date":"2016-12-14T15:54:37Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Iâ€™ve detailed the problems with that approach here: <a href=\"https://www.zachleat.com/web/lazy-loading-webfonts/\" rel=\"nofollow noopener\" title=\"https://www.zachleat.com/web/lazy-loading-webfonts/\">https://www.zachleat.com/we...</a></p>","replies":[]}]},{"postId":"3042352259","parentPostId":null,"date":"2016-12-08T15:52:39Z","author":"Johny Varsami","avatar":"https://www.gravatar.com/avatar/f1e2a44dc9ce2a99ad57c55f5298b1fc?d=mm&s=60","message":"<p>Seriously? As if there are not enough other problems in the front end. This is definitely an issue to be solved by the browser.</p>","replies":[{"postId":"3128814026","parentPostId":"3042352259","date":"2017-01-30T21:08:11Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Pray, fineâ€”but keep rowing to shore.</p>","replies":[]}]},{"postId":"3128722610","parentPostId":null,"date":"2017-01-30T20:15:38Z","author":"Francis Boudreau","avatar":"https://www.gravatar.com/avatar/af4e0d45f2baa37723cb805d69de65f3?d=mm&s=60","message":"<p>I did some research but can't find the answer : do Typekit automaticaly fix the FOIT problem?</p>","replies":[{"postId":"3128814362","parentPostId":"3128722610","date":"2017-01-30T21:08:24Z","author":"zachleat","avatar":"https://www.gravatar.com/avatar/e1899004c71c7043343196103e210be3?d=mm&s=60","message":"<p>Yes, if you use the advanced embed!</p>","replies":[{"postId":"3129023237","parentPostId":"3128814362","date":"2017-01-30T23:18:17Z","author":"Francis Boudreau","avatar":"https://www.gravatar.com/avatar/af4e0d45f2baa37723cb805d69de65f3?d=mm&s=60","message":"<p>But there is no FOIT when I use the \"standard\" embed. When I load my website, I can see the text before the font is loaded. When the font is loaded (in the network tab), the text changes to the good font. (Is it because I have the font locally on my machine?)</p>","replies":[]}]}]},{"postId":"3428694203","parentPostId":null,"date":"2017-07-21T17:08:06Z","author":"Luke Cavanagh","avatar":"https://www.gravatar.com/avatar/6d0f32a5e5bc24bb15ad104c81da7a70?d=mm&s=60","message":"<p>Really solid post, thank you for sharing.</p>","replies":[]},{"postId":"3482859950","parentPostId":null,"date":"2017-08-23T13:46:44Z","author":"nil2","avatar":"https://www.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=mm&s=60","message":"<p>How about a `&lt;link&gt;` tag with an `async` attribute?</p>","replies":[]},{"postId":"3487680866","parentPostId":null,"date":"2017-08-26T10:18:36Z","author":"Duncan Wilcox","avatar":"https://www.gravatar.com/avatar/c381ef8ac1032d9ee9507edce50d457a?d=mm&s=60","message":"<p>In the critical foft+preload you mention that preload \"browser support is limited\", but also results could be \"more dramatic with HTTP headers\", suggesting you haven't tried. It would seem that preload HTTP headers, and their interpretation as push in HTTP2 context, are actually supported by many more browsers than link-preload. Even though some browsers still have some caching glitches of pushed resources on repeat load, it would seem that pushing a subset woff could be higher up in the waterfall and significantly improve performance.</p>","replies":[]}]}}